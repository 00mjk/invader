// SPDX-License-Identifier: GPL-3.0-only

#ifndef INVADER__TAG__HEK__CLASS__ENUM_HPP
#define INVADER__TAG__HEK__CLASS__ENUM_HPP

#include "../../../hek/data_type.hpp"

namespace Invader::HEK {
    enum FramebufferBlendFunction : TagEnum {
        FRAMEBUFFER_BLEND_FUNCTION_ALPHA_BLEND,
        FRAMEBUFFER_BLEND_FUNCTION_MULTIPLY,
        FRAMEBUFFER_BLEND_FUNCTION_DOUBLE_MULTIPLY,
        FRAMEBUFFER_BLEND_FUNCTION_ADD,
        FRAMEBUFFER_BLEND_FUNCTION_SUBTRACT,
        FRAMEBUFFER_BLEND_FUNCTION_COMPONENT_MIN,
        FRAMEBUFFER_BLEND_FUNCTION_COMPONENT_MAX,
        FRAMEBUFFER_BLEND_FUNCTION_ALPHA_MULTIPLY_ADD
    };

    enum FramebufferFadeMode : TagEnum {
        FRAMEBUFFER_FADE_MODE_NONE,
        FRAMEBUFFER_FADE_MODE_FADE_WHEN_PERPENDICULAR,
        FRAMEBUFFER_FADE_MODE_FADE_WHEN_PARALLEL
    };

    enum FunctionOut : TagEnum {
        FUNCTION_OUT_NONE,
        FUNCTION_OUT_A_OUT,
        FUNCTION_OUT_B_OUT,
        FUNCTION_OUT_C_OUT,
        FUNCTION_OUT_D_OUT
    };

    enum WaveFunction : TagEnum {
        WAVE_FUNCTION_ONE,
        WAVE_FUNCTION_ZERO,
        WAVE_FUNCTION_COSINE,
        WAVE_FUNCTION_COSINE_VARIABLE_PERIOD,
        WAVE_FUNCTION_DIAGONAL_WAVE,
        WAVE_FUNCTION_DIAGONAL_WAVE_VARIABLE_PERIOD,
        WAVE_FUNCTION_SLIDE,
        WAVE_FUNCTION_SLIDE_VARIABLE_PERIOD,
        WAVE_FUNCTION_NOISE,
        WAVE_FUNCTION_JITTER,
        WAVE_FUNCTION_WANDER,
        WAVE_FUNCTION_SPARK
    };
}

#endif
