// SPDX-License-Identifier: GPL-3.0-only

#ifndef INVADER__TAG__HEK__CLASS__ENUM_HPP
#define INVADER__TAG__HEK__CLASS__ENUM_HPP

#include "../../../hek/data_type.hpp"

namespace Invader::HEK {
    enum FramebufferBlendFunction : TagEnum {
        FRAMEBUFFER_BLEND_FUNCTION_ALPHA_BLEND,
        FRAMEBUFFER_BLEND_FUNCTION_MULTIPLY,
        FRAMEBUFFER_BLEND_FUNCTION_DOUBLE_MULTIPLY,
        FRAMEBUFFER_BLEND_FUNCTION_ADD,
        FRAMEBUFFER_BLEND_FUNCTION_SUBTRACT,
        FRAMEBUFFER_BLEND_FUNCTION_COMPONENT_MIN,
        FRAMEBUFFER_BLEND_FUNCTION_COMPONENT_MAX,
        FRAMEBUFFER_BLEND_FUNCTION_ALPHA_MULTIPLY_ADD
    };

    enum FramebufferFadeMode : TagEnum {
        FRAMEBUFFER_FADE_MODE_NONE,
        FRAMEBUFFER_FADE_MODE_FADE_WHEN_PERPENDICULAR,
        FRAMEBUFFER_FADE_MODE_FADE_WHEN_PARALLEL
    };

    enum FunctionOut : TagEnum {
        FUNCTION_OUT_NONE,
        FUNCTION_OUT_A_OUT,
        FUNCTION_OUT_B_OUT,
        FUNCTION_OUT_C_OUT,
        FUNCTION_OUT_D_OUT
    };

    enum WaveFunction : TagEnum {
        WAVE_FUNCTION_ONE,
        WAVE_FUNCTION_ZERO,
        WAVE_FUNCTION_COSINE,
        WAVE_FUNCTION_COSINE_VARIABLE_PERIOD,
        WAVE_FUNCTION_DIAGONAL_WAVE,
        WAVE_FUNCTION_DIAGONAL_WAVE_VARIABLE_PERIOD,
        WAVE_FUNCTION_SLIDE,
        WAVE_FUNCTION_SLIDE_VARIABLE_PERIOD,
        WAVE_FUNCTION_NOISE,
        WAVE_FUNCTION_JITTER,
        WAVE_FUNCTION_WANDER,
        WAVE_FUNCTION_SPARK
    };

    enum MaterialType : TagEnum {
        MATERIAL_TYPE_DIRT,
        MATERIAL_TYPE_SAND,
        MATERIAL_TYPE_STONE,
        MATERIAL_TYPE_SNOW,
        MATERIAL_TYPE_WOOD,
        MATERIAL_TYPE_METAL_HOLLOW,
        MATERIAL_TYPE_METAL_THIN,
        MATERIAL_TYPE_METAL_THICK,
        MATERIAL_TYPE_RUBBER,
        MATERIAL_TYPE_GLASS,
        MATERIAL_TYPE_FORCE_FIELD,
        MATERIAL_TYPE_GRUNT,
        MATERIAL_TYPE_HUNTER_ARMOR,
        MATERIAL_TYPE_HUNTER_SKIN,
        MATERIAL_TYPE_ELITE,
        MATERIAL_TYPE_JACKAL,
        MATERIAL_TYPE_JACKAL_ENERGY_SHIELD,
        MATERIAL_TYPE_ENGINEER_SKIN,
        MATERIAL_TYPE_ENGINEER_FORCE_FIELD,
        MATERIAL_TYPE_FLOOD_COMBAT_FORM,
        MATERIAL_TYPE_FLOOD_CARRIER_FORM,
        MATERIAL_TYPE_CYBORG_ARMOR,
        MATERIAL_TYPE_CYBORG_ENERGY_SHIELD,
        MATERIAL_TYPE_HUMAN_ARMOR,
        MATERIAL_TYPE_HUMAN_SKIN,
        MATERIAL_TYPE_SENTINEL,
        MATERIAL_TYPE_MONITOR,
        MATERIAL_TYPE_PLASTIC,
        MATERIAL_TYPE_WATER,
        MATERIAL_TYPE_LEAVES,
        MATERIAL_TYPE_ELITE_ENERGY_SHIELD,
        MATERIAL_TYPE_ICE,
        MATERIAL_TYPE_HUNTER_SHIELD
    };

    enum FunctionType : TagEnum {
        FUNCTION_TYPE_LINEAR,
        FUNCTION_TYPE_EARLY,
        FUNCTION_TYPE_VERY_EARLY,
        FUNCTION_TYPE_LATE,
        FUNCTION_TYPE_VERY_LATE,
        FUNCTION_TYPE_COSINE
    };

    enum FunctionBoundsMode : TagEnum {
        FUNCTION_BOUNDS_MODE_CLIP,
        FUNCTION_BOUNDS_MODE_CLIP_AND_NORMALIZE,
        FUNCTION_BOUNDS_MODE_SCALE_TO_FIT
    };

    enum FunctionScaleBy : TagEnum {
        FUNCTION_SCALE_BY_NONE,
        FUNCTION_SCALE_BY_A_IN,
        FUNCTION_SCALE_BY_B_IN,
        FUNCTION_SCALE_BY_C_IN,
        FUNCTION_SCALE_BY_D_IN,
        FUNCTION_SCALE_BY_A_OUT,
        FUNCTION_SCALE_BY_B_OUT,
        FUNCTION_SCALE_BY_C_OUT,
        FUNCTION_SCALE_BY_D_OUT
    };

    enum FunctionNameNullable : TagEnum {
        FUNCTION_NAME_NULLABLE_NONE,
        FUNCTION_NAME_NULLABLE_A,
        FUNCTION_NAME_NULLABLE_B,
        FUNCTION_NAME_NULLABLE_C,
        FUNCTION_NAME_NULLABLE_D
    };
}

#endif
