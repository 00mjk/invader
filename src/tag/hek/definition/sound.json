[
    {
        "name": "SoundFormat",
        "options": [
            "16-bit PCM",
            "Xbox ADPCM",
            "IMA ADPCM",
            "Ogg Vorbis",
            "FLAC"
        ],
        "type": "enum"
    },
    {
        "name": "SoundClass",
        "options": [
            "projectile impact",
            "projectile detonation",
            "unused",
            "unused 1",
            "weapon fire",
            "weapon ready",
            "weapon reload",
            "weapon empty",
            "weapon charge",
            "weapon overheat",
            "weapon idle",
            "unused 2",
            "unused 3",
            "object impacts",
            "particle impacts",
            "slow particle impacts",
            "unused 4",
            "unused 5",
            "unit footsteps",
            "unit dialog",
            "unused 6",
            "unused 7",
            "vehicle collision",
            "vehicle engine",
            "unused 8",
            "unused 9",
            "device door",
            "device force field",
            "device machinery",
            "device nature",
            "device computers",
            "unused 10",
            "music",
            "ambient nature",
            "ambient machinery",
            "ambient computers",
            "unused 11",
            "unused 12",
            "unused 13",
            "first person damage",
            "unused 14",
            "unused 15",
            "unused 16",
            "unused 17",
            "scripted dialog player",
            "scripted effect",
            "scripted dialog other",
            "scripted dialog force unspatialized",
            "unused 18",
            "unused 19",
            "game event"
        ],
        "type": "enum"
    },
    {
        "name": "SoundSampleRate",
        "options": [
            "22050 Hz",
            "44100 Hz"
        ],
        "type": "enum"
    },
    {
        "name": "SoundChannelCount",
        "options": [
            "mono",
            "stereo"
        ],
        "type": "enum"
    },
    {
        "name": "SoundFlags",
        "type": "bitfield",
        "fields": [
            "fit to adpcm blocksize",
            "split long sound into permutations"
        ],
        "width": 32
    },
    {
        "name": "SoundPermutation",
        "fields": [
            {
                "name": "name",
                "type": "TagString",
                "endian": null,
                "read_only": true
            },
            {
                "name": "skip fraction",
                "minimum": 0.0,
                "maximum": 1.0,
                "type": "Fraction"
            },
            {
                "name": "gain",
                "minimum": 0.0,
                "maximum": 1.0,
                "type": "Fraction",
                "default": 1.0
            },
            {
                "name": "format",
                "type": "SoundFormat",
                "read_only": true
            },
            {
                "name": "next permutation index",
                "type": "Index",
                "read_only": true,
                "reflexive": "permutations",
                "struct": "SoundPitchRange"
            },
            {
                "name": "samples pointer",
                "type": "uint32",
                "endian": "little",
                "cache_only": true
            },
            {
                "type": "pad",
                "size": 4
            },
            {
                "name": "tag id 0",
                "comment": "Set to the sound tag's tag ID",
                "type": "TagID",
                "cache_only": true,
                "endian": "little"
            },
            {
                "name": "buffer size",
                "type": "uint32",
                "comment": "this is the buffer size used to hold (and, for Vorbis, decompress) the 16-bit PCM data (unused in Xbox ADPCM)",
                "endian": "little",
                "read_only": true
            },
            {
                "name": "tag id 1",
                "comment": "Set to the sound tag's tag ID",
                "type": "TagID",
                "cache_only": true,
                "endian": "little"
            },
            {
                "name": "samples",
                "type": "TagDataOffset",
                "compound": true,
                "file_offset": true,
                "external_file_offset": "sounds.map",
                "compile_ignore": true,
                "read_only": true
            },
            {
                "name": "mouth data",
                "type": "TagDataOffset",
                "compound": true,
                "read_only": true
            },
            {
                "name": "subtitle data",
                "type": "TagDataOffset",
                "compound": true,
                "read_only": true
            }
        ],
        "type": "struct",
        "post_cache_deformat": true,
        "unsafe_to_dedupe": true,
        "pre_compile": true,
        "title": "name",
        "size": 124
    },
    {
        "name": "SoundPitchRange",
        "groups": [
            {
                "name": "Pitch Range",
                "description": "In some instances where sounds are played, the pitch of sounds can be variable (e.g. vehicle engine effects). This is done by altering the playback speed of the sound. However, if the playback speed of a sound is changed too much, it can result in the sound being distorted. This can be worked around using pitch ranges.\n\nWhen creating your sound tag, you can create multiple pitch ranges using sounds that are recorded at different pitches. So, for a sound that is at natural pitch 2, you would supply a sound that is twice as high as a sound at natural pitch 1 (effectively one octave higher).\n\nBend bounds determines the minimum and maximum bend range to play the pitch range, and natural pitch determines the pitch bend in which the sound will be played at normal speed.\n\nExample: If there are two pitch ranges (bend bounds 0-1.75 & natural pitch 1, bend bounds 1.75-3 & natural pitch 2.25), then the first pitch range will be used until the bend is 1.75, in which the second pitch range will be used. So, if the pitch bend being used is 1.8, then the second pitch range will be used, and it will be played at 80% speed (1.8 / 2.25 = 0.8).\n\nIf you don't expect your sound to be played at multiple pitches, then having a single pitch range with a natural pitch of 1 is valid, too, and is typical of most sound tags.",
                "first": "name"
            }
        ],
        "fields": [
            {
                "name": "name",
                "type": "TagString",
                "endian": null
            },
            {
                "name": "natural pitch",
                "type": "float",
                "default": 1.0,
                "default_sign": true,
                "comment": "This is the base pitch for this pitch range.\nWhen the pitch bend is equal to this, then the audio is played at normal pitch and speed."
            },
            {
                "name": "bend bounds",
                "bounds": true,
                "type": "float",
                "comment": "This is the minimum and maximum bend in which this pitch range will be used.\nIf the lower bound is higher than natural pitch, then it will be set to natural pitch. Also, if the higher bound is lower than natural pitch, then it will be set to natural pitch."
            },
            {
                "name": "actual permutation count",
                "type": "uint16",
                "read_only": true,
                "comment": "This is the number of actual permutations in the pitch range, not including chunks due to splitting."
            },
            {
                "type": "pad",
                "size": 2
            },
            {
                "name": "playback rate",
                "type": "float",
                "endian": "little",
                "cache_only": true
            },
            {
                "name": "unknown ffffffff 0",
                "type": "uint32",
                "endian": "little",
                "cache_only": true
            },
            {
                "name": "unknown ffffffff 1",
                "type": "uint32",
                "endian": "little",
                "cache_only": true
            },
            {
                "name": "permutations",
                "type": "TagReflexive",
                "struct": "SoundPermutation",
                "compound": true,
                "read_only": true
            }
        ],
        "type": "struct",
        "pre_compile": true,
        "title": "name",
        "size": 72
    },
    {
        "name": "Sound",
        "fields": [
            {
                "name": "flags",
                "type": "SoundFlags"
            },
            {
                "name": "sound class",
                "type": "SoundClass"
            },
            {
                "name": "sample rate",
                "type": "SoundSampleRate",
                "read_only": true
            },
            {
                "name": "minimum distance",
                "unit": "world units",
                "type": "float"
            },
            {
                "name": "maximum distance",
                "unit": "world units",
                "type": "float"
            },
            {
                "name": "skip fraction",
                "type": "Fraction"
            },
            {
                "name": "random pitch bounds",
                "bounds": true,
                "type": "float",
                "default": [ 1.0, 1.0 ],
                "comment": "This is the base playback rate of the sound, affecting tempo and pitch."
            },
            {
                "name": "inner cone angle",
                "type": "Angle",
                "default": 6.28318548202515
            },
            {
                "name": "outer cone angle",
                "type": "Angle",
                "default": 6.28318548202515
            },
            {
                "name": "outer cone gain",
                "type": "Fraction",
                "default": 1.0
            },
            {
                "name": "random gain modifier",
                "type": "float",
                "default": 1.0
            },
            {
                "name": "maximum bend per second",
                "type": "float"
            },
            {
                "type": "pad",
                "size": 12
            },
            {
                "name": "zero skip fraction modifier",
                "type": "float"
            },
            {
                "name": "zero gain modifier",
                "type": "float"
            },
            {
                "name": "zero pitch modifier",
                "type": "float"
            },
            {
                "type": "pad",
                "size": 12
            },
            {
                "name": "one skip fraction modifier",
                "type": "float"
            },
            {
                "name": "one gain modifier",
                "type": "float"
            },
            {
                "name": "one pitch modifier",
                "type": "float"
            },
            {
                "type": "pad",
                "size": 12
            },
            {
                "name": "channel count",
                "type": "SoundChannelCount",
                "read_only": true
            },
            {
                "name": "format",
                "type": "SoundFormat",
                "read_only": true
            },
            {
                "name": "promotion sound",
                "type": "TagDependency",
                "classes": [
                    "sound"
                ],
                "compound": true
            },
            {
                "name": "promotion count",
                "type": "uint16"
            },
            {
                "type": "pad",
                "size": 2
            },
            {
                "name": "longest permutation length",
                "comment": "natural pitch * seconds * 1100; not set if pitch modifier is set to anything besides 1; not accurate since increasing natural pitch decreases the length\nuses the 'buffer size' value for 16-bit PCM and Ogg Vorbis (divide by 2 * channel count to get sample count);\nuses entire size of samples for ADPCM (multiply by 130 / 36 * channel count to get sample count)",
                "type": "uint32",
                "hidden": true,
                "cache_only": true
            },
            {
                "type": "pad",
                "size": 8
            },
            {
                "name": "unknown ffffffff 0",
                "type": "uint32",
                "endian": "little",
                "cache_only": true
            },
            {
                "name": "unknown ffffffff 1",
                "type": "uint32",
                "endian": "little",
                "cache_only": true
            },
            {
                "name": "pitch ranges",
                "type": "TagReflexive",
                "struct": "SoundPitchRange",
                "compound": true,
                "read_only": true,
                "zero_on_index": true
            }
        ],
        "type": "struct",
        "post_cache_parse": true,
        "unsafe_to_dedupe": true,
        "pre_compile": true,
        "size": 164
    }
]
